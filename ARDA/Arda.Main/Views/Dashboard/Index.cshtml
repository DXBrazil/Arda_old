@using System.Security.Principal
@using System.Net.Http;
@using Arda.Common.Utils
@using Arda.Common.ViewModels.Main

<style>
    .datepicker {
        z-index: 10000;
    }

    #lblWBIsWorkload {
        margin-bottom: 10px;
    }

    .irs-line, .irs-bar, .irs-bar-edge {
        top: 17px;
    }

    .irs-slider {
        top: 9px;
    }

    #ComplexityLevel {
        margin-top: 35px;
    }

    .multiselect {
        text-align: left;
    }

    .multiselect-selected-text {
        margin-left: 5px;
    }

    .multiselect-container.dropdown-menu {
        background-color: white;
        color: #555;
    }

    .multiselect.dropdown-toggle.btn.btn-default {
        background-color: white;
        color: #555;
        outline: 1px solid #ccc;
    }

    #buttonsPanel {
        text-align: right;
        margin-top: 20px;
        padding-top: 10px;
        border-top: 1px solid #ccc;
    }
</style>

@{
    var user = User.Claims.First(claim => claim.Type == "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name").Value;
    var userStatus = Util.ConnectToRemoteService<int>(HttpMethod.Get, Util.PermissionsURL + "api/useroperations/getuserstatus", user, string.Empty).Result;
    if (userStatus == 0)
    {
        //Message for Situation 0: Waiting_Review
        <div class="jumbotron">
            <h1>Welcome!</h1>
            <h4><strong>Status: </strong><span style="color:green">Waiting Review</span></h4>

            <p>You can access this tool but unfortunally you don't have any permissions to other modules yet.</p>
            <p>An e-mail has been sent to system admin. Watch out your e-mail, as soon you get any aditional permitions you will receive an message.</p>
        </div>
    }
    else if (userStatus == 1)
    {
        <!--Message for Situation 1: Banned_User-->
        <div class="jumbotron">
            <h1>Welcome!</h1>
            <h4><strong>Status: </strong><span style="color:red">Permissions Denied</span></h4>
            <br />
            <p>The system admin has reviewed your permissions solicitation and denied it.</p>
            <p>Your situation may change, keep your eyes open for any aditional permitions notification on your e-mail.</p>
        </div>
    }
    else if (userStatus == 2)
    {
        //Page for Situation 2: Permissions_Granted-->
        var canApproveUsers = Util.ConnectToRemoteService<bool>(HttpMethod.Get, Util.PermissionsURL + "api/useroperations/verifyifuseradmin", user, string.Empty).Result;
        if (canApproveUsers)
        {
            int numberUsersToApprove = Util.ConnectToRemoteService<int>(HttpMethod.Get, Util.PermissionsURL + "api/useroperations/getnumberofuserstoapprove", user, string.Empty).Result;
            if (numberUsersToApprove > 0)
            {
                <div class="alert alert-warning fade in">
                    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                    <strong>Warning!</strong> You have @numberUsersToApprove users pending to approve. You can review it <a asp-controller="Users" asp-action="Review">here</a>.
                </div>
            }
        }

        <section class="concontainer-fluid">

            <div class="col-xs-12">
                <div class="row">
                    <header class="ctn-header-dashboard">
                        <div class="col-xs-12 col-lg-3 col-md-6">
                            <h2>Placeholder title</h2>
                        </div>
                        <div class="col-xs-12 col-lg-3 col-md-6">
                            <input type="radio" value="1" name="type" class="dashboard-filter-field" id="dashboard-filter-type-1" />

                            <label class="dashboard-filter" for="dashboard-filter-type-1">
                                Type 1
                            </label>

                            <input type="radio" value="2" name="type" class="dashboard-filter-field" id="dashboard-filter-type-2" />

                            <label class="dashboard-filter" for="dashboard-filter-type-2">
                                Type 2
                            </label>

                            <input type="radio" value="3" name="type" class="dashboard-filter-field" id="dashboard-filter-type-3" />

                            <label class="dashboard-filter" for="dashboard-filter-type-3">
                                Type 3
                            </label>

                        </div>
                        <div class="col-xs-12 col-lg-3 col-md-6">
                            <select name="filter-assign" class="form-control dashboard-filter-assign">
                                <option value="">TE Name 0</option>
                                <option value="">TE Name 1</option>
                                <option value="">TE Name 2</option>
                                <option value="">TE Name 3</option>
                                <option value="">TE Name 4</option>
                                <option value="">TE Name 5</option>
                            </select>
                        </div>

                        <div class="col-xs-12 col-lg-3 col-md-6">
                            <label for="_WBID">WBID:</label>
                            <input id="_WBID" type="text"/>
                        </div>

                        <div class="col-xs-12 col-lg-3 col-md-6">
                            <button id="btnNew" class="btn btn-dark btn-sm" data-toggle="modal" data-target="#WorkloadModal">New</button>
                            <button id="btnDetails" class="btn btn-dark btn-sm" data-toggle="modal" data-target="#WorkloadModal">Details</button>
                        </div>

                        <div class="clearfix"></div>
                    </header>

                    <template id="templateTask">
                        <div id="templateId" class="task" draggable="true">
                            <span class="templateText">templateText</span>
                            <div></div>
                        </div>
                    </template>

                    <div class="col-xs-12">
                        <div class="row">
                            <div class="col-xs-12 col-lg-3 col-md-6 dashboard-panel">
                                <div class="row">
                                    <h3 class="dashboard-panel-title  dashboard-panel-title--todo">todo</h3>
                                </div>
                                <div id="divTaskListTodo" class="folder state0" data-state="0"></div>
                            </div>
                            <div class="col-xs-12 col-lg-3 col-md-6 dashboard-panel">
                                <div class="row">
                                    <h3 class="dashboard-panel-title  dashboard-panel-title--doing">doing</h3>
                                </div>
                                <div id="divTaskListDoing" class="folder state1" data-state="1"></div>

                            </div>
                            <div class="col-xs-12 col-lg-3 col-md-6 dashboard-panel">
                                <div class="row">
                                    <h3 class="dashboard-panel-title dashboard-panel-title--done">done</h3>
                                </div>
                                <div id="divTaskListDone" class="folder state2" data-state="2"></div>
                            </div>
                            <div class="col-xs-12 col-lg-3 col-md-6 dashboard-panel">
                                <div class="row">
                                    <h3 class="dashboard-panel-title dashboard-panel-title--approved">approved</h3>
                                </div>
                                <div id="divTaskListActive" class="folder state3" data-state="3"></div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </section>
    }
}

<!-- Add Workload Modal -->
@await Html.PartialAsync("_WorkloadModal")



<script>

    $(function () {
        //Initialize:
        Initialize();

        //Load values:
        //Get All Activities:
        $.getJSON('/activity/GetActivities', null, callbackGetActivities);
        //Get User Technologies:
        $.getJSON('/technology/GetTechnologies', null, callbackGetTechnologies);
        //Get User Metrics:
        $.getJSON('/metric/GetMetrics', null, callbackGetMetrics);
        //Get User Users:
        $.getJSON('/users/GetUsers', null, callbackGetUsers);

        $('#_WBID').val('d9144058-0ad7-4770-3926-08d393a0b0bb');
    });

    function Initialize() {
        //Click events:

        //New Workload:
        $('#btnNew').click(newWorkloadState);
        //Workload Details:
        $('#btnDetails').click(detailsWorkloadState);
        //Editing Workload:
        $('#btnWorkloadEdit').click(editWorkloadState);
        //Reset Button:
        $('#btnWorkloadReset').click(resetWorkloadForm);


        //Other events:
        $('#WBComplexity').on('change', changeComplexity);

        $('#form-add-workload').submit(addWorkload);


        //Components:
        $("#WBIsWorkload").bootstrapSwitch();

        $('#WBStartDate').datepicker({
            format: "mm/dd/yyyy",
            autoclose: true,
            todayHighlight: true
        });

        $('#WBEndDate').datepicker({
            format: "mm/dd/yyyy",
            autoclose: true,
            todayHighlight: true
        });

        $("#WBComplexity").ionRangeSlider({
            min: 1,
            max: 5,
            hide_min_max: true,
            hide_from_to: true,
            grid: false,
            keyboard: true
        });
    }

    function newWorkloadState() {
        resetWorkloadForm();
        //Modal Title:
        $('#ModalTitle').text('New Workload:');
        //Get GUID:
        $.getJSON('/workload/GetGuid', null, function (data) {
            $('#WBID').attr('value', data);
        });
        //Fields:
        $('#WBStartDate').removeAttr("disabled");
        $('#WBEndDate').removeAttr("disabled");
        if ($('#WBIsWorkload').bootstrapSwitch('disabled')) {
            $('#WBIsWorkload').bootstrapSwitch('toggleDisabled', true, true);
        }
        $('#WBTitle').removeAttr("disabled");
        $('#WBDescription').removeAttr("disabled");
        $('#WBExpertise').removeAttr("disabled");
        $('#WBActivity').removeAttr("disabled");
        var slider = $("#WBComplexity").data("ionRangeSlider");
        slider.update({
            from: 1,
            disable: false
        });
        $('.multiselect-container.dropdown-menu li a label input').removeAttr("disabled");
        $('.fileinput').removeClass('hidden');
        //Buttons:
        $('#btnWorkloadReset').removeClass('hidden');
        $('#btnWorkloadSend').removeClass('hidden');
        $('#btnWorkloadSend').text('Add');
        $('#btnWorkloadEdit').addClass('hidden');
        $('#btnWorkloadDelete').addClass('hidden');
    }

    function detailsWorkloadState() {
        //Modal Title:
        $('#ModalTitle').text('Workload Details:');
        //Set GUID:
        var guid = $('#_WBID').val();
        $('#WBID').attr('value', guid);
        //Load Workload:
        loadWorkload(guid);

        //Fields:
        $('#WBStartDate').attr("disabled", "disabled");
        $('#WBEndDate').attr("disabled", "disabled");
        if (!($('#WBIsWorkload').bootstrapSwitch('disabled'))) {
            $('#WBIsWorkload').bootstrapSwitch('toggleDisabled', true, true);
        }
        $('#WBTitle').attr("disabled", "disabled");
        $('#WBDescription').attr("disabled", "disabled");
        $('#WBExpertise').attr("disabled", "disabled");
        $('#WBActivity').attr("disabled", "disabled");
        var slider = $("#WBComplexity").data("ionRangeSlider");
        slider.update({
            from: 1,
            disable: true
        });
        $('.multiselect-container.dropdown-menu li a label input').attr("disabled", "disabled");
        $('.fileinput').addClass('hidden');
        //Buttons:
        $('#btnWorkloadReset').addClass('hidden');
        $('#btnWorkloadSend').addClass('hidden');
        $('#btnWorkloadEdit').removeClass('hidden');
        $('#btnWorkloadDelete').addClass('hidden');
    }

    function editWorkloadState() {
        //Modal Title:
        $('#ModalTitle').text('Editing Workload:');
        //Fields:
        $('#WBStartDate').removeAttr("disabled");
        $('#WBEndDate').removeAttr("disabled");
        if ($('#WBIsWorkload').bootstrapSwitch('disabled')) {
            $('#WBIsWorkload').bootstrapSwitch('toggleDisabled', true, true);
        }
        $('#WBTitle').removeAttr("disabled");
        $('#WBDescription').removeAttr("disabled");
        $('#WBExpertise').removeAttr("disabled");
        $('#WBActivity').removeAttr("disabled");
        var slider = $("#WBComplexity").data("ionRangeSlider");
        slider.update({
            from: 1,
            disable: false
        });
        $('.multiselect-container.dropdown-menu li a label input').removeAttr("disabled");
        $('.fileinput').removeClass('hidden');
        //Buttons:
        $('#btnWorkloadReset').addClass('hidden');
        $('#btnWorkloadSend').text('Update');
        $('#btnWorkloadSend').removeClass('hidden');
        $('#btnWorkloadDelete').removeClass('hidden');
        $('#btnWorkloadEdit').addClass('hidden');
    }

    function resetWorkloadForm() {
        $('#WBStartDate').val('');
        $('#WBEndDate').val('');
        if ($('#WBIsWorkload').bootstrapSwitch('disabled')) {
            $('#WBIsWorkload').bootstrapSwitch('toggleDisabled', true, true);
            $('#WBIsWorkload').bootstrapSwitch('state', true);
            $('#WBIsWorkload').bootstrapSwitch('toggleDisabled', true, true);
        } else {
            $('#WBIsWorkload').bootstrapSwitch('state', true);
        }

        $('#WBTitle').val('');
        $('#WBDescription').val('');
        $('#WBExpertise').val('-1');
        $('#WBActivity').val('-1');
        //Slider:
        var slider = $("#WBComplexity").data("ionRangeSlider");
        slider.update({
            from: 1
        });
        //Technologies Multiselect:
        var tech = [];
        $("#WBTechnologies option").each(function () {
            tech.push($(this).val());
        });
        $('#WBTechnologies').multiselect('deselect', tech);
        //Metrics Multiselect:
        var met = [];
        $("#WBMetrics option").each(function () {
            met.push($(this).val());
        });
        $('#WBMetrics').multiselect('deselect', met);
        //Users Multiselect:
        var users = [];
        $("#WBUsers option").each(function () {
            users.push($(this).val());
        });
        $('#WBUsers').multiselect('deselect', users);
        //Files:
        $('.fileinput').fileinput('clear');
        $('#filesList').html('');
    }


    function changeComplexity(e) {
        var value = $(this).val();
        var txt = '';
        switch (value) {
            case '1':
                txt = 'Very Low';
                break;
            case '2':
                txt = 'Low';
                break;
            case '3':
                txt = 'Medium';
                break;
            case '4':
                txt = 'High';
                break;
            case '5':
                txt = 'Very High';
                break;
        }
        $('#ComplexityLevel').text(txt);
    }


    function callbackGetActivities(data) {
        var options = [];
        options.push('<option selected disabled value="-1">Select the activity</option>');
        for (var i = 0; i < data.length; i++) {
            var text = data[i].ActivityName;
            var key = data[i].ActivityID;
            options.push('<option value="' + key + '">' + text + '</option>');
        }
        $('#WBActivity').html(options.join(''));
    }

    function callbackGetMetrics(data) {
        var options = [];
        var select = $('#WBMetrics');
        for (var i = 0; i < data.length; i++) {
            var text = '[' + data[i].MetricCategory + '] ' + data[i].MetricName;
            var key = data[i].MetricID;
            options.push('<option value="' + key + '">' + text + '</option>');
        }
        select.html(options.join(''));

        select.multiselect({
            buttonWidth: '100%',
            numberDisplayed: 1,
            nonSelectedText: 'Click to select the metrics'
        });
    }

    function callbackGetTechnologies(data) {
        var options = [];
        var select = $('#WBTechnologies');
        for (var i = 0; i < data.length; i++) {
            var text = data[i].TechnologyName;
            var key = data[i].TechnologyID;
            options.push('<option value="' + key + '">' + text + '</option>');
        }
        select.html(options.join(''));

        select.multiselect({
            buttonWidth: '100%',
            numberDisplayed: 2,
            nonSelectedText: 'Click to select the technologies'
        });
    }

    function callbackGetUsers(data) {
        var options = [];
        var select = $('#WBUsers');
        for (var i = 0; i < data.length; i++) {
            var text = data[i].Name;
            var key = data[i].UniqueName;
            options.push('<option value="' + key + '">' + text + '</option>');
        }
        select.html(options.join(''));

        select.multiselect({
            buttonWidth: '100%',
            numberDisplayed: 2,
            nonSelectedText: 'Click to select the users'
        });
    }


    function addWorkload(e) {
        //Gets bootstrap-switch component value:
        var value = $('#WBIsWorkload').bootstrapSwitch('state');
        //Serializes form and append bootstrap-switch value:
        var data = new FormData(this);
        data.append('WBIsWorkload', value)

        $('#msg').text('Wait...');
        $.ajax({
            url: 'Workload/Add',
            type: 'POST',
            data: data,
            processData: false,
            contentType: false,
            success: function (response) {
                if (response.IsSuccessStatusCode) {
                    $('#msg').text('Success!');
                } else {
                    $('#msg').text('Error!');
                }
            }
        });
        e.preventDefault();
    }

    function loadWorkload(workloadID) {
        $.ajax({
            url: 'Workload/GetWorkload?=' + workloadID,
            type: 'GET',
            processData: false,
            contentType: false,
            cache: false,
            success: function (data) {
                $('#WBID').val(data.WBID);
                $('#WBStartDate').val(data.WBStartDate);
                $('#WBEndDate').val(data.WBEndDate);

                $('#WBIsWorkload').bootstrapSwitch('toggleDisabled', true, true);
                $('#WBIsWorkload').bootstrapSwitch('state', data.WBIsWorkload);
                $('#WBIsWorkload').bootstrapSwitch('toggleDisabled', true, true);

                $('#WBTitle').val(data.WBTitle);
                $('#WBDescription').val(data.WBDescription);
                $('#WBExpertise').val(data.WBExpertise);
                $('#WBActivity').val(data.WBActivity);

                //Complexity
                var slider = $("#WBComplexity").data("ionRangeSlider");
                slider.update({
                    from: data.WBComplexity,
                    disable: true
                });
                var txt = '';
                switch (data.WBComplexity) {
                    case 1:
                        txt = 'Very Low';
                        break;
                    case 2:
                        txt = 'Low';
                        break;
                    case 3:
                        txt = 'Medium';
                        break;
                    case 4:
                        txt = 'High';
                        break;
                    case 5:
                        txt = 'Very High';
                        break;
                }
                $('#ComplexityLevel').text(txt);
                //Multi-Select:
                $('#WBTechnologies').multiselect('select', data.WBTechnologies);
                $('#WBMetrics').multiselect('select', data.WBMetrics);
                $('#WBUsers').multiselect('select', data.WBUsers);

                //Files:
                var list = $('#filesList');
                $(data.WBFilesList).each(function() {
                    var a = $('<a href=' + this.Item2 + '>');
                    a.text(this.Item3);
                    list.append(a);
                });
            }
        });

    }


</script>